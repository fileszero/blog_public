<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on FILES=0</title>
    <link>https://fileszero.kimurak.net/categories/ruby/</link>
    <description>Recent content in Ruby on FILES=0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Apr 2015 04:19:22 +0000</lastBuildDate>
    
	<atom:link href="https://fileszero.kimurak.net/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ruby環境(Mac)</title>
      <link>https://fileszero.kimurak.net/2015-04-01-ruby-on-mac/</link>
      <pubDate>Wed, 01 Apr 2015 04:19:22 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2015-04-01-ruby-on-mac/</guid>
      <description>&lt;p&gt;何かと必要になってくるrubyをインストール。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mac各種パッケージのバージョンアップ</title>
      <link>https://fileszero.kimurak.net/2015-03-31-version-up-npm/</link>
      <pubDate>Tue, 31 Mar 2015 12:17:53 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2015-03-31-version-up-npm/</guid>
      <description>&lt;p&gt;とってもべんりなパッケージ管理ソフト、パッケージ管理ソフトも複数あったりして、アップデート方法忘れがち。&lt;/p&gt;

&lt;p&gt;まとめときます。&lt;/p&gt;

&lt;h3 id=&#34;node-js-npm&#34;&gt;node.js npm&lt;/h3&gt;

&lt;p&gt;node.jsのパッケージ管理ソフト&lt;/p&gt;

&lt;p&gt;そんなnpm自身をアップデートするには&lt;/p&gt;

&lt;p&gt;If you update npm itself, do NOT use the npm update command.&lt;/p&gt;

&lt;p&gt;The upstream-recommended way to update npm is:&lt;/p&gt;

&lt;p&gt;npm install -g npm@latest&lt;/p&gt;

&lt;p&gt;だそうです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>railsでvimのお勉強#2</title>
      <link>https://fileszero.kimurak.net/2014-08-05-sutadying-rails-and-vim-2/</link>
      <pubDate>Tue, 05 Aug 2014 07:37:32 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2014-08-05-sutadying-rails-and-vim-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://fileszero.kimurak.net/posts/2014/2014-08-05-sutadying-rails-and-vim-1&#34; title=&#34;railsでvimのお勉強#1&#34; target=&#34;_blank&#34;&gt;前回&lt;/a&gt;OSセットアップからrailsアプリの作成までやりました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>railsでvimのお勉強#1</title>
      <link>https://fileszero.kimurak.net/2014-08-05-sutadying-rails-and-vim-1/</link>
      <pubDate>Tue, 05 Aug 2014 02:30:26 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2014-08-05-sutadying-rails-and-vim-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.vim.org/&#34; target=&#34;_blank&#34;&gt;vim&lt;/a&gt;、プログラマならみんな手足のように使えますよね。&lt;/p&gt;

&lt;p&gt;ま、自分はまったく使えませんが。&lt;/p&gt;

&lt;p&gt;vim、マスターすれば魔法のようにコードが湧いてくるとか、VBな人もマシン語が２進で読めるようになるとか噂なので、&lt;/p&gt;

&lt;p&gt;前々から使えるようになりたいと思ってたんですわ。&lt;/p&gt;

&lt;p&gt;とはいえ、どっぷりwindowsな人生なので使う機会もあまりなく、sakuraとかvisual studioとかで事足りてしまうわけです。&lt;/p&gt;

&lt;p&gt;という事で、ターミナル経由のlinuxでrailsのお勉強をして、vimをマスターしてしまおうという企画の作業メモです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruby(dbi) &#43; db(sqlite3)</title>
      <link>https://fileszero.kimurak.net/2014-06-19-rubydbsqlite3/</link>
      <pubDate>Thu, 19 Jun 2014 04:39:34 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2014-06-19-rubydbsqlite3/</guid>
      <description>Webアプリに欠かせないデータベース関係の処理をお試しで書いてみたいと思います。
rubyからDBにアクセスするには、
 DBネイティブなライブラリ DBI等のベンダ非依存のライブラリ。(&amp;#8216;等の&amp;#8217;とか言ってますがDBI以外知りません) ActiveRecord等の高機能O/Rマッパー  なんてのが使えるかと思います。ネイティブライブラリはちょっと拡張性にかけるし、O/Rラッパーは大げさなので、DBIを使ってみようかと思います。
DBMSもsqlite,mysql,postgresqlとか色々使えるようですが、お手軽なsqliteにします。
DBMS(sqlite3)の準備 いつ入れたかわからないけど既に入ってました。
1 2 3 4  C:\&amp;gt;sqlite3 SQLite version 3.5.6 Enter &amp;#34;.help&amp;#34; for instructions sqlite&amp;gt; .quit   だいぶ古いけど、まぁ問題が出たらバージョンアップする方向で。
最新版はこちらから。
rubyライブラリの準備 先ずはsqlite3用のライブラリ。
DBI使う場合でもネイティブライブラリは必要なのです。gemでインストールします。
1 2  #&amp;gt; gem install sqlite3 #&amp;gt; gem install sqlite3-ruby   つぎにデータベースへのアクセスをある程度抽象化してくれるというDBIというライブラリ。
こちらもgemで。
1 2  #&amp;gt; gem install dbi #&amp;gt; gem install dbd-sqlite3   dbd-sqlite3はsqliteとdbiの仲を取り持つライブラリらしい。
eclipseにDB開発ツールをインストールしてSQLite用に仕立てる eclipseのプラグインで
Kepler &amp;#8211; http://download.eclipse.org/releases/kepler
&amp;#8220;Database Development&amp;#8221;</description>
    </item>
    
    <item>
      <title>WindowsでEclipse&#43;Ruby</title>
      <link>https://fileszero.kimurak.net/2014-06-14-windows-eclipse-ruby/</link>
      <pubDate>Sat, 14 Jun 2014 09:07:11 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2014-06-14-windows-eclipse-ruby/</guid>
      <description>テキストエディタでちっさいスクリプトとか書いてたけど、ちょっとWebアプリとか作ってみたくなりました。
軟弱者には、やっぱIDEですよね。ってことでEclipseでRubyやってみようかと思います。
Eclipse Install Eclipseは本家のからEclipse Standard 4.3.2 Windows 64bitをダウンロードしました。
例によってインストーラは無いので、落としてきたファイルをD:\eclipseに展開して終了。
D:\eclipse\eclipse.exeを実行するとworkspaceを聞いてくるので、D:\usr\src\workspaceにしました。フォルダ名は好みですな。
インストールはこれで終了。インストーラないほうが好きです。
あ、日本語化はしません。
RDTインストール EclipseをRubyな感じにさせるにはプラグインをインストールするみたいです。
このへん調べてると、RDTとかRadRailsとかAptanaとか色々出てきて混乱します。自分の理解ではザックリ
 RDT=純Rubyの統合開発環境
RadRails=RDTにRailsのサポートを追加したもの
Aptana Studio=EclipseにRadRailsを組み込んでいろいろ高機能化したもの
 と理解しときます。
一番軽そうで、Eclipseのサイトから(純正？)pluginが導入できるRDT単体で行ってみたいと思います。お勉強の身なんでrails使わなさそうだし。
手順は標準的なplugin入れる方法で、
Help -&amp;gt; Install New Software&amp;#8230; で
Work withに&amp;#8221;Kepler &amp;#8211; http://download.eclipse.org/releases/kepler&amp;amp;#8221;を選択。
 Programming Languages -&amp;gt; Dynamic Languages Toolkit &amp;#8211; Ruby Development Tools
にチェックを入れてNext-&amp;gt;Next-&amp;gt; I accept -&amp;gt; Finish
でRubyなEclipseができるはずです。
Rubyのインストール ためしにプロジェクト作ってみようと
File-&amp;gt;New-&amp;gt;Project&amp;#8230; -&amp;gt; Ruby-&amp;gt;Ruby Project
Project Name: FirstRubyProject
まで来たら&amp;#8221;At least one interpreter must be configured&amp;#8221;
とのこと。</description>
    </item>
    
    <item>
      <title>rubyのインストール（ソースから版)</title>
      <link>https://fileszero.kimurak.net/2013-11-04-ruby-install-from-soruce/</link>
      <pubDate>Mon, 04 Nov 2013 08:54:57 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2013-11-04-ruby-install-from-soruce/</guid>
      <description>前回yumでrubyをインストールしましたが、入るバージョンが古いので各種便利ライブラリが使えなかったり済ます。
今回はソースからインストールしてみます。
さらにyum管理外なので一般ユーザー（インストールに使用したユーザー）のみ対象でインストールしてみます。
という事で、作業はすべて一般ユーザーアカウントで行います。
ユーザーhomeにソース展開用のフォルダを作って、
rubyのダウンロードページ
https://www.ruby-lang.org/ja/downloads/
から最新のソースをゲットして展開します。
1 2 3 4 5  $ cd ~ $ mkdir src src]$ wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz src]$ tar vzxf ruby-2.0.0-p247.tar.gz src]$ cd ruby-2.0.0-p247   インストール先を指定してconfigureします。
1 2 3  ruby-2.0.0-p247]$ ./configure -prefix=$HOME/local ruby-2.0.0-p247]$ make ruby-2.0.0-p247]$ make install   そすっとこんな感じでインストールされます。
1 2  ruby-2.0.0-p247]$ ~/local/bin/ruby -v ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-linux]   ただし単にrubyとするとシステムにインストールされてるのを使うようになっているので、.bachrcを変更します。
1 2 3 4 5 6 7 8 9  ruby-2.</description>
    </item>
    
    <item>
      <title>rubyのインストール(とりあえずyum版)</title>
      <link>https://fileszero.kimurak.net/2013-11-02-installing-ruby/</link>
      <pubDate>Sat, 02 Nov 2013 12:53:07 +0000</pubDate>
      
      <guid>https://fileszero.kimurak.net/2013-11-02-installing-ruby/</guid>
      <description>yamでインストールすればとりあえず入る。（けど、最新のgemとか使えなかったりするので要注意。）
1 2 3 4 5 6 7 8 9 10 11  $ su # rpm -q ruby パッケージ ruby はインストールされていません。 # yum install ruby ruby-devel rdoc irb # yum install rubygems # exit exit $ ruby -v ruby 1.8.7 (2011-06-30 patchlevel 352) [x86_64-linux] $ gem -v 1.3.7   パッケージ的には
ruby x86_64 1.8.7.352-12.el6_4 updates 534 k
ruby-devel x86_64 1.8.7.352-12.el6_4 updates 314 k
ruby-irb x86_64 1.8.7.352-12.el6_4 updates 313 k</description>
    </item>
    
  </channel>
</rss>